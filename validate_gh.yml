- hosts: all
  tasks:
    - name: show parameters coming from github
      debug:
        msg: "Request coming from github: |
        actor: {{ github_actor | default('undefined') }}
        repo: {{ github_repository | default('undefined') }}
        workflow: {{ github_workflow | default('undefined') }} 
        workspace: {{ github_workspace | default('undefined') }} 
        event_name: {{ github_event_name | default('undefined') }} 
        event_path: {{ github_event_path | default('undefined') }} 
        sha: {{ github_sha | default('undefined') }} 
        ref: {{ github_ref | default('undefined') }} 
        head_ref: {{ github_head_ref | default('undefined') }} 
        base_ref: {{ github_base_ref | default('undefined')}} 
        server_url: {{ github_server_url | default('undefined')}} 
        "
    - fail:
        msg: Server URL is not authorized to run this job.
      when: github_server_url != "https://github.com"
    - fail:
        msg: Repository is not authorized to run this job.
      when: not "scaphandre" in github_repository
      #    - name: notify gitter room of job running
      #      raw: "curl --data-urlencode \"message=AWX: Running job from github actor=**{{ github_actor | default('undefined') }}** repo=**{{ github_repository | default('undefined') }}** sha=**{{ github_sha | default('undefined') }}** server_url=**{{ github_server_url | default('undefined') }}**\" https://webhooks.gitter.im/e/6490ed7689c7c47dbf94"
    - name: rustup downloaded
      get_url:
        url: https://sh.rustup.rs
        dest: .
        force: no
        mode: 0775
      register: rustup_downloaded
    - name: rust installed
      shell: ./rustup-init.sh -y
      when: rustup_downloaded.changed is defined and rustup_downloaded.changed
    - name: scaphandre repository cloned 
      git:
        clone: yes
        depth: 1
        force: yes
        repo: "https://github.com/{{ github_repository | default('hubblo-org/scaphandre') }}.git"
        version: "{{ github_sha }}"
        refspec: "{{ github_ref }}"
        dest: scaphandre
    - name: build and run scaphandre
      shell: cd ~/scaphandre && cargo build && ./target/debug/scaphandre stdout -t 2 && cd ~
    - name: run unit tests
      shell: cd ~/scaphandre && cargo test --all
    - name: build docker image
      shell: cd ~/scaphandre && docker build -t scaphandre-dev .
    - name: boot docker stack
      shell: cd ~/scaphandre/docker-compose && docker-compose up -f docker-compose-dev.yml -d 
    - name: tests prometheus exporter
      shell: curl -s http://localhost:9090/api/v1/targets | jq .data.activeTargets[1].health | tr -d '"' | grep up
    - name: cleaning the stack
      shell: cd ~/scaphandre/docker-compose && docker-compose down -f docker-compose-dev.yml
